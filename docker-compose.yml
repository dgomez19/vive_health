version: "3.7"
services:
  auth:
    build:
      context: ./auth/
    image: auth
    container_name: auth
    command: sh -c 'python /app/manage.py makemigrations && python /app/manage.py migrate && python /app/manage.py runserver 0.0.0.0:8001'
    ports:
      - 8001:8001
    restart: "no"
    depends_on:
      - clinic-db
    volumes:
      - ./auth:/app

  specialist:
    build:
      context: ./specialist/
    image: specialist
    container_name: specialist
    command: sh -c 'python /app/manage.py makemigrations && python /app/manage.py migrate && python /app/manage.py runserver 0.0.0.0:8002'
    ports:
      - 8002:8002
    restart: "no"
    depends_on:
      - clinic-db
    volumes:
      - ./specialist:/app

  specialty:
    build:
      context: ./specialty/
    image: specialty
    container_name: specialty
    command: sh -c 'python /app/manage.py makemigrations && python /app/manage.py migrate && python /app/manage.py runserver 0.0.0.0:8003'
    ports:
      - 8003:8003
    restart: "no"
    depends_on:
      - clinic-db
    volumes:
      - ./specialty:/app

  appointment:
    build:
      context: ./appointment/
    image: appointment
    container_name: appointment
    command: sh -c 'python /app/manage.py makemigrations && python /app/manage.py migrate && python /app/manage.py runserver 0.0.0.0:8004'
    ports:
      - 8004:8004
    restart: "no"
    depends_on:
      - clinic-db
    volumes:
      - ./appointment:/app

  clinic-db:
    restart: "no"
    image: postgres:12
    container_name: clinic-db
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=clinic
      - POSTGRES_PASSWORD=clinic
      - POSTGRES_DB=clinic
    volumes:
      - clinic_postgresql_data_desarrollo:/var/lib/postgresql/data

volumes:
  clinic_postgresql_data_desarrollo:
